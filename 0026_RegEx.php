Регулярное выражение — это последовательность символов, которая образует шаблон поиска. 
При поиске данных в тексте вы можете использовать этот шаблон поиска, чтобы описать то, что вы ищете.

Регулярное выражение может состоять из одного символа или более сложного шаблона.

Регулярные выражения можно использовать для выполнения всех типов операций поиска и замены текста.

В PHP регулярные выражения — это строки, состоящие из разделителей, шаблона и необязательных модификаторов.
<?php
$exp = "/w3schools/i";
?>


Наиболее распространенными функциями являются:

Функция	                Описание
preg_match()	        Возвращает 1, если шаблон был найден в строке, и 0, если нет
preg_match_all()	    Возвращает количество раз, которое шаблон был найден в строке. Это значение также может быть равно 0
preg_replace()	        Возвращает новую строку, в которой соответствующие шаблоны были заменены другой строкой


preg_match() Функция сообщит вам, содержит ли строка совпадения с шаблоном.
<?php
$str = "Visit W3Schools";
$pattern = "/w3schools/i";
echo preg_match($pattern, $str);
?>


Функция preg_match_all() сообщит вам, сколько совпадений было найдено для шаблона в строке.
<?php
$str = "The rain in SPAIN falls mainly on the plains.";
$pattern = "/ain/i";
echo preg_match_all($pattern, $str);
?>


Функция preg_replace() заменит все совпадения с шаблоном в строке на другую строку.
<?php
$str = "Visit Microsoft!";
$pattern = "/microsoft/i";
echo preg_replace($pattern, "W3Schools", $str);
?>


Модификатор	        Описание
i	                Выполняет поиск без учета регистра	
m	                Выполняет многострочный поиск (шаблоны, которые ищут совпадение в начале или конце строки, 
                    теперь будут соответствовать началу или концу каждой строки)	
u	                Обеспечивает правильное сопоставление шаблонов в кодировке UTF-8


Квадратные скобки используются для поиска диапазона символов:
Выражение	    Описание	
[abc]	        Найдите один или несколько символов внутри квадратных скобок	
[^abc]	        Найдите любой символ, НЕ заключенный в квадратные скобки	
[a-z]	        Найдите любой символ в алфавитном порядке между двумя буквами	
[A-z]	        Найдите любой символ в алфавитном порядке между заданной заглавной буквой и заданной строчной буквой	
[A-Z]	        Найдите любой символ в алфавитном порядке между двумя заглавными буквами.	
[123]	        Найдите одну или несколько цифр внутри квадратных скобок	
[0-5]	        Найдите любые цифры между этими двумя числами	
[0-9]	        Найдите какие-нибудь цифры


Метасимволы - это символы с особым значением:

Метасимвол	    Описание
|	            Найдите соответствие любому из шаблонов, разделённых символом |, например: кошка|собака|рыба	
.	            Найдите любого персонажа	
^	            Находит совпадение в начале строки, как в: ^Hello	
$	            Находит совпадение в конце строки, как в: World$	
\d	            Найдите какие-нибудь цифры	
\D	            Найдите любые не-цифры	
\s	            Найдите любой пробел	
\S	            Найдите любой символ, не содержащий пробелов	
\w	            Найдите любую букву алфавита (от A до Z) и цифру (от 0 до 9)	
\W	            Найдите любой неалфавитный и нецифровый символ	
\b	            Найдите совпадение в начале слова, например: \bСЛОВО, или в конце слова, например: СЛОВО\b	
\uxxxx	        Найдите символ Юникода, указанный шестнадцатеричным числом xxxx


Кванторы определяют величины:

Квантификатор	    Описание
n+	                Соответствует любой строке, содержащей хотя бы одно n	
n*	                Соответствует любой строке, содержащей ноль или более вхождений n	
n?	                Соответствует любой строке, содержащей ноль или одно вхождение n	
n{3}	            Соответствует любой строке, содержащей последовательность 3 n	
n{2, 5}	            Соответствует любой строке, содержащей последовательность из не менее чем 2, но не более чем 5 n	
n{3,}	            Соответствует любой строке, содержащей последовательность из не менее чем 3 n


Вы можете использовать фигурные скобки ( ) для применения квантификаторов ко всем шаблонам. 
Их также можно использовать для выделения частей шаблона, которые будут использоваться для сопоставления.

Используйте группировку для поиска слова «банан», введя ba, а затем два раза na:

<?php
$str = "Apples and bananas.";
$pattern = "/ba(na){2}/i";
echo preg_match($pattern, $str);
?>