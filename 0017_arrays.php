<?php
$cars = array("Volvo", "BMW", "Toyota");
?>

В PHP существует три типа массивов:
        Индексированные массивы - Массивы с числовым индексом
        Ассоциативные массивы - Массивы с именованными ключами
        Многомерные массивы - Массивы , содержащие один или несколько массивов



Индексированные массивы ------------------------------------------------------
<?php
$myArr = array("Volvo", 15, ["apples", "bananas"], myFunction);
?>


count()     - для подсчёта элементов массива:
<?php
$cars = array("Volvo", "BMW", "Toyota");
echo count($cars);
?>


Чтобы получить доступ к элементу массива, вы можете обратиться к индексному номеру.
<?php
$cars = array("Volvo", "BMW", "Toyota");
echo $cars[0];
?>
<?php
$cars = array("Volvo", "BMW", "Toyota");
$cars[1] = "Ford";
var_dump($cars);
?>


array_push() для добавления нового элемента
<?php
array_push($cars, "Ford");
var_dump($cars);
?>
------------------------------------------------------------------------------------------------------------



Ассоциативные массивы ------------------------------------------------------
<?php
$car = array("brand"=>"Ford", "model"=>"Mustang", "year"=>1964);
var_dump($car);
?>


Чтобы получить доступ к элементу массива, вы можете обратиться к имени ключа.
<?php
$car = array("brand"=>"Ford", "model"=>"Mustang", "year"=>1964);
echo $car["model"];
?>
<?php
$car = array("brand"=>"Ford", "model"=>"Mustang", "year"=>1964);
$car["year"] = 2024;
var_dump($car);
?>
------------------------------------------------------------------------------------------------------------



Вы можете создавать массивы с помощью функции array() или использовать []:
<?php
$cars = array("Volvo", "BMW", "Toyota");

$cars = [
    "Volvo",
    "BMW",
    "Toyota", // не важно есть ли в конце запятая или нет
  ];
?>


Вы можете сначала объявить пустой массив, а позже добавить в него элементы:
<?php
$cars = [];
$cars[0] = "Volvo";
$cars[1] = "BMW";
$cars[2] = "Toyota";
?>


Получите доступ к элементу, обратившись к его индексному номеру или используйте имя ключа:
Вы можете использовать как двойные, так и одинарные кавычки при доступе к массиву:

<?php
$cars = array("Volvo", "BMW", "Toyota");
echo $cars[2];

$cars = array("brand" => "Ford", "model" => "Mustang", "year" => 1964);
echo $cars["year"];

echo $cars["model"];
echo $cars['model'];
?>


Элементы массива могут быть любого типа данных, включая функцию.
<?php
function myFunction() {
    echo "I come from a function!";
  }
  
$myArr = array("Volvo", 15, myFunction);
  
$myArr[2]();
?>

Обновляйте элементы массива в цикле Foreach:
    вставить символ & в присваивание, чтобы присвоить значение элемента по ссылке и тем самым гарантировать, 
    что любые изменения, внесённые в элемент массива внутри цикла, будут внесены в исходный массив:
<?php
$cars = array("Volvo", "BMW", "Toyota");
foreach ($cars as &$x) {
  $x = "Ford";
}
unset($x);
var_dump($cars);
?>
Не забудьте добавить unset() функцию после цикла.
Без функции unset($x) переменная $x будет оставаться ссылкой на последний элемент массива.



Добавить элемент массива
Чтобы добавить элементы в существующий массив, можно использовать синтаксис [] со скобками.
<?php
$fruits = array("Apple", "Banana", "Cherry");
$fruits[] = "Orange";
?>


Чтобы добавить элементы в ассоциативный массив, или массив «ключ-значение», 
используйте скобки [] для ключа и присваивайте значение с помощью оператора =
<?php
$cars = array("brand" => "Ford", "model" => "Mustang");
$cars["color"] = "Red";
?>


Чтобы добавить несколько элементов в существующий массив, используйте функцию array_push().
<?php 
$fruits = array("Apple", "Banana", "Cherry");
array_push($fruits, "Orange", "Kiwi", "Lemon");
?>


Чтобы добавить несколько элементов в существующий массив, можно использовать оператор += .
<?php 
$cars = array("brand" => "Ford", "model" => "Mustang");
$cars += ["color" => "red", "year" => 1964];
?>


Удалить элемент массива
Чтобы удалить существующий элемент из массива, можно использовать функцию array_splice() .
<?php
$cars = array("Volvo", "BMW", "Toyota");
array_splice($cars, 1, 1);
?>
После удаления массив автоматически индексируется заново, начиная с индекса 0.


Вы также можете использовать функцию unset() для удаления существующих элементов массива.
<?php
$cars = array("Volvo", "BMW", "Toyota");
unset($cars[1]);
?>
функция unset() не изменяет порядок индексов, 
то есть после удаления массив больше не будет содержать отсутствующие индексы.



Чтобы удалить несколько элементов, 
функция array_splice() принимает параметр длины, который позволяет указать количество удаляемых элементов.
<?php
$cars = array("Volvo", "BMW", "Toyota");
array_splice($cars, 1, 2);
?>


Функция unset() принимает неограниченное количество аргументов 
и поэтому может использоваться для удаления нескольких элементов массива:
<?php
$cars = array("Volvo", "BMW", "Toyota");
unset($cars[0], $cars[1]);

$cars = array("brand" => "Ford", "model" => "Mustang", "year" => 1964);
unset($cars["model"]);
?>


Вы также можете использовать функцию array_diff() для удаления элементов из ассоциативного массива.
Эта функция возвращает новый массив без указанных элементов.
<?php
$cars = array("brand" => "Ford", "model" => "Mustang", "year" => 1964);
$newarray = array_diff($cars, ["Mustang", 1964]);
?>
функция array_diff() принимает значения в качестве параметров, а не ключи.


Функция array_pop() удаляет последний элемент массива.
<?php
$cars = array("Volvo", "BMW", "Toyota");
array_pop($cars);
?>


Функция array_shift() удаляет первый элемент массива.
<?php
$cars = array("Volvo", "BMW", "Toyota");
array_shift($cars);
?>